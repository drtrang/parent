<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- 项目遵循的 POM 模型版本 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 声明父项目的坐标，继承其属性，artifactId、name、prerequisites 等不会继承 -->
    <parent>
        <groupId>com.github.drtrang</groupId>
        <artifactId>dependencies2</artifactId>
        <version>1.3.3-SNAPSHOT</version>
    </parent>

    <!-- 项目的 Maven 坐标 -->
    <groupId>com.github.drtrang</groupId>
    <artifactId>parent2</artifactId>
    <version>1.3.3-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!-- 项目描述 -->
    <name>parent</name>
    <description>
        Parent pom providing dependency and plugin management for applications built with Maven.
    </description>
    <url>https://github.com/drtrang/parent</url>

    <!-- 许可信息 -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <inceptionYear>2017</inceptionYear>

    <!-- 组织信息 -->
    <organization>
        <name>trang</name>
        <url>http://blog.trang.space</url>
    </organization>

    <!-- 开发者信息 -->
    <developers>
        <developer>
            <id>trang</id>
            <name>trang</name>
            <email>donghao.l@hotmail.com</email>
            <timezone>+8</timezone>
            <url>http://blog.trang.space</url>
        </developer>
    </developers>

    <!-- 源码管理 -->
    <scm>
        <connection>scm:git:https://github.com/drtrang/parent.git</connection>
        <developerConnection>scm:git:git@github.com:drtrang/parent.git</developerConnection>
        <url>https://github.com/drtrang/parent</url>
        <tag>HEAD</tag>
    </scm>

    <!-- 问题管理 -->
    <issueManagement>
        <system>github</system>
        <url>https://github.com/drtrang/parent/issues</url>
    </issueManagement>

    <!-- 项目发布管理 -->
    <distributionManagement>
        <snapshotRepository>
            <id>oss</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>oss</id>
            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <!-- 自定义属性 -->
    <properties>
        <mybatis-generator-extension.version>0.0.4</mybatis-generator-extension.version>
        <trang-bom.version>1.3.3-SNAPSHOT</trang-bom.version>
    </properties>

    <!-- 项目依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- 这里可以通过排序来指定版本，先声明的优先级高 -->
            <dependency>
                <groupId>com.github.drtrang</groupId>
                <artifactId>bom</artifactId>
                <version>${trang-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 项目 profile 信息，可以被继承 -->
    <profiles>
        <!-- 默认 profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <mvn.profile.active>dev</mvn.profile.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!-- 跳过执行测试用例，如需跳过整个 test 阶段请使用 skip，但是不建议 -->
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- 测试 profile -->
        <profile>
            <id>coveralls</id>
            <properties>
                <mvn.profile.active>coveralls</mvn.profile.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>false</skipTests>
                            <includes>
                                <include>**/test/coveralls/*.java</include>
                            </includes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.eluder.coveralls</groupId>
                        <artifactId>coveralls-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- 校验 profile -->
        <profile>
            <id>valid</id>
            <properties>
                <mvn.profile.active>valid</mvn.profile.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- 正式 profile -->
        <profile>
            <id>release</id>
            <properties>
                <mvn.profile.active>release</mvn.profile.active>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-release-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- 项目构建信息，可以被继承 -->
    <build>
        <defaultGoal>package</defaultGoal>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <!-- 项目插件管理 -->
        <pluginManagement>
            <plugins>
                <!-- 以下是 Maven 整个生命周期中执行的插件，按顺序执行 -->
                <!-- https://maven.apache.org/plugins/maven-clean-plugin/clean-mojo.html -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <!-- 包含空文件夹，默认 false -->
                        <includeEmptyDirs>true</includeEmptyDirs>
                        <!-- 开启默认的过滤器，默认 true -->
                        <addDefaultExcludes>false</addDefaultExcludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <!-- 使用编译器的优化方法优化编译后的代码，默认 false -->
                        <optimize>true</optimize>
                        <!-- 生成用于对方法参数进行反射的元数据，默认 false -->
                        <parameters>true</parameters>
                        <!-- 显示编译警告，默认 false -->
                        <showWarnings>true</showWarnings>
                        <!-- 显示过时 api，默认 false -->
                        <showDeprecation>true</showDeprecation>
                        <!-- 隐藏不支持多线程时的警告，默认 false -->
                        <skipMultiThreadWarning>true</skipMultiThreadWarning>
                        <!-- 开启增量编译，默认 true -->
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <!-- 多线程执行，1.5C 表示启用 1.5*CPU内核个线程 -->
                        <forkCount>1.5C</forkCount>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Branch>${git.branch}</Implementation-Branch>
                                <Implementation-Build>${git.commit.id.abbrev}</Implementation-Build>
                                <Implementation-Timestamp>${git.build.time}</Implementation-Timestamp>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Branch>${git.branch}</Implementation-Branch>
                                <Implementation-Build>${git.commit.id.abbrev}</Implementation-Build>
                                <Implementation-Timestamp>${git.build.time}</Implementation-Timestamp>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- 修复 java8 中生成 javadoc 失败的问题 -->
                        <additionalJOption>-Xdoclint:none</additionalJOption>
                        <!-- 自定义 tag -->
                        <tags>
                            <tag>
                                <name>date</name>
                                <placement>a</placement>
                                <head>日期:</head>
                            </tag>
                        </tags>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <configuration>
                        <!-- 是否允许 SNAPSHOT 依赖 -->
                        <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                        <!-- 是否自动分配子模块的版本 -->
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <!-- 按项目原子性的提交 -->
                        <commitByProject>true</commitByProject>
                        <!-- tag 的格式 -->
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                        <!-- 执行时启用的 profile，多个 profile 用逗号分隔 -->
                        <releaseProfiles>release</releaseProfiles>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <configuration>
                        <updateReleaseInfo>true</updateReleaseInfo>
                    </configuration>
                </plugin>
                <!-- 以下是一些功能插件 -->
                <!-- 规则检查插件，避免被依赖的依赖引入过期的 jar 包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-banned-dependencies</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <!-- 检查是否有符合禁止条件的依赖，如果有则失败 -->
                                    <bannedDependencies>
                                        <!-- 是否查找传递依赖 -->
                                        <searchTransitive>true</searchTransitive>
                                        <!-- 被禁止的依赖，表达式规则：groupId[:artifactId][:version][:type][:scope][:classifier] -->
                                        <excludes>
                                            <exclude>org.slf4j:*</exclude>
                                        </excludes>
                                        <!-- 例外依赖，只能包含 excludes 中已有的依赖 -->
                                        <includes>
                                            <!-- 当 groupId 为 org.springframework 时，只能使用其 4.0 版本的 jar 包 -->
                                            <include>org.slf4j:slf4j-api</include>
                                            <include>org.slf4j:*-slf4j</include>
                                        </includes>
                                    </bannedDependencies>
                                    <!-- 检查 Maven 版本，要求在 3.0.3 以上 -->
                                    <requireMavenVersion>
                                        <version>3.0.3</version>
                                    </requireMavenVersion>
                                    <!-- 检查 JDK 版本，要求在 1.8 以上 -->
                                    <requireJavaVersion>
                                        <version>1.8</version>
                                    </requireJavaVersion>
                                </rules>
                                <fail>true</fail>
                                <failFast>true</failFast>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- 依赖解析插件，常用来查看项目的依赖组成 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <inputEncoding>${project.build.sourceEncoding}</inputEncoding>
                        <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>
                    </configuration>
                </plugin>
                <!-- 版本号插件，常用语依赖/插件版本升级 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                </plugin>
                <!-- 命令行插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                </plugin>
                <!-- 多源码目录打包插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                </plugin>
                <!-- archetype 生成插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-archetype-plugin</artifactId>
                    <configuration>
                        <archetypeGroupId>${project.groupId}</archetypeGroupId>
                        <archetypeArtifactId>${project.artifactId}</archetypeArtifactId>
                        <archetypeVersion>${project.version}</archetypeVersion>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <defaultEncoding>${project.build.sourceEncoding}</defaultEncoding>
                    </configuration>
                </plugin>
                <!-- 打包插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                </plugin>
                <!-- 签名插件，发布到中央仓库时会用到 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- 版本号插件，更新版本号，目前用 release 插件更新 -->
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-versions-plugin</artifactId>
                </plugin>
                <!-- build 信息插件，和 git-commit-id-plugin 作用差不多，用另一个代替了 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <shortRevisionLength>6</shortRevisionLength>
                    </configuration>
                </plugin>
                <!-- 下面三个是代码覆盖率插件 -->
                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <configuration>
                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <format>xml</format>
                        <maxmem>256m</maxmem>
                        <aggregate>true</aggregate>
                        <check>
                            <haltOnFailure>true</haltOnFailure>
                        </check>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <configuration>
                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                        <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                    </configuration>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- mybatis 代码生成器插件 -->
                <!-- http://www.mybatis.org/generator/running/runningWithMaven.html -->
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <configuration>
                        <configurationFile>
                            ${basedir}/src/main/resources/generator/generatorConfig.xml
                        </configurationFile>
                        <overwrite>true</overwrite>
                        <verbose>true</verbose>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${mysql.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>tk.mybatis</groupId>
                            <artifactId>mapper-generator</artifactId>
                            <version>${mapper-module.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>com.github.drtrang</groupId>
                            <artifactId>mybatis-generator-extension</artifactId>
                            <version>${mybatis-generator-extension.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.freemarker</groupId>
                            <artifactId>freemarker</artifactId>
                            <version>${freemarker.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- 以下是继承自 spring-boot-starter-parent 的插件，重写或额外加一些配置 -->
                <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <!-- 生成 build-info 文件 -->
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <additionalProperties>
                            <encoding.source>${project.build.sourceEncoding}</encoding.source>
                            <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                            <java.source>${maven.compiler.source}</java.source>
                            <java.target>${maven.compiler.target}</java.target>
                        </additionalProperties>
                    </configuration>
                </plugin>
                <!-- https://github.com/ktoso/maven-git-commit-id-plugin -->
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <configuration>
                        <abbrevLength>8</abbrevLength>
                        <commitIdGenerationMode>full</commitIdGenerationMode>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- 项目插件，子项目会继承这些插件，不用再主动声明 -->
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>